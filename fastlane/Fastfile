# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
platform :ios do
  scheme = ENV['SCHEME']
  workspace = ENV['WORKSPACE']
  versionTag = ""

  desc "Description of what the lane does"
  lane :do_release do
    # TODO: Tag release on git
    prepare_build
    upload_prebuilt_binary
  end

  desc "Release dry run, all steps expect uploading release."
  lane :release_dry_run do 
    prepare_version_tag
    puts "version tag " + versionTag
    prepare_build
  end

  desc "Prepared a version tag"
  private_lane :prepare_version_tag do
    commit = last_git_commit
    versionTag = get_version_number + '.' + commit[:abbreviated_commit_hash]
    puts versionTag
  end

  desc "Prepares build"
  private_lane :prepare_build do 
    xcclean(scheme: scheme)
    cocoapods
    scan(scheme: scheme, code_coverage: true) 
    # provides test coverage report
    xcov(
      workspace: workspace,
      scheme: scheme
    )
    build_app(clean: true, scheme: scheme, skip_package_ipa: true)
    carthage(command: "build", no_skip_current: true)
    carthage(command: "archive", frameworks: "Uluru")
    # Publish to slack
    # TODO: Publish test coverage report
    # TODO: Publish release availablity or error message=
  end

  desc "Uploads prebuilt binary for carthage"
  private_lane :upload_prebuilt_binary do
    prepare_version_tag
    # We pick the version as the release version tag.
    github_release = set_github_release(
      is_prerelease: true,
      repository_name: ENV['GITHUB_RELEASE_REPO'],
      api_token: ENV['GITHUB_TOKEN'],
      name: "WIP Beta build",
      tag_name: versionTag,
      commitish: "beta",
      description: "WIP description",
      upload_assets: ["Uluru.framework.zip"]
    )
  end

end
